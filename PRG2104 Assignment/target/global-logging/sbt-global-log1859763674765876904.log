[debug] > Exec(;reload; set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download, resolveSourceClassifiers, insertProjectTransitiveDependencies" ;preferScala2;*/*:dumpStructureTo C:/Users/JOSHUA~1/AppData/Local/Temp/sbt-structure.xml; session clear-all ; set ideaPort in Global := 52938, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 1.8.0_401)
[debug] Load.defaultLoad until apply took 2.7685ms
[debug]           Load.loadUnit: plugins took 40.8048ms
[debug]           Load.loadUnit: defsScala took 0.0202ms
[debug] [Loading] Scanning directory C:\Users\Joshua Goon\OneDrive\Documents\GitHub\finalprojectv2-joshuagoon\project
[debug]             Load.loadUnit: mkEval took 0.519ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Joshua Goon\OneDrive\Documents\GitHub\finalprojectv2-joshuagoon\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.1402 ms
[info] loading settings for project finalprojectv2-joshuagoon-build from idea.sbt ...
[debug]               Load.resolveProject(finalprojectv2-joshuagoon-build) took 2.4294ms
[debug]             Load.loadTransitive: finalizeProject(Project(id finalprojectv2-joshuagoon-build, base: C:\Users\Joshua Goon\OneDrive\Documents\GitHub\finalprojectv2-joshuagoon\project, plugins: List(<none>))) took 5.3319ms
[debug] [Loading] Done in C:\Users\Joshua Goon\OneDrive\Documents\GitHub\finalprojectv2-joshuagoon\project, returning: (finalprojectv2-joshuagoon-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 44.8376ms
[debug]           Load.loadUnit: cleanEvalClasses took 1.1396ms
[debug]         Load.loadUnit(file:/C:/Users/Joshua%20Goon/OneDrive/Documents/GitHub/finalprojectv2-joshuagoon/project/, ...) took 87.8355ms
[debug]       Load.apply: load took 90.0624ms
[debug]       Load.apply: resolveProjects took 0.1725ms
[debug]       Load.apply: finalTransforms took 12.4534ms
[debug]       Load.apply: config.delegates took 0.703ms
[debug]       Load.apply: Def.make(settings)... took 104.0873ms
[debug]       Load.apply: structureIndex took 19.8042ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from C:\Users\Joshua Goon\OneDrive\Documents\GitHub\finalprojectv2-joshuagoon\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1035.764ms
[debug]     Load.loadUnit: defsScala took 0.0038ms
[debug] [Loading] Scanning directory C:\Users\Joshua Goon\OneDrive\Documents\GitHub\finalprojectv2-joshuagoon
[debug]       Load.loadUnit: mkEval took 0.3337ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.0602 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 37.6275ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Joshua Goon\OneDrive\Documents\GitHub\finalprojectv2-joshuagoon, plugins: List(<none>))) took 41.5191ms
[debug] [Loading] Done in C:\Users\Joshua Goon\OneDrive\Documents\GitHub\finalprojectv2-joshuagoon, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 104.6057ms
[debug]     Load.loadUnit: cleanEvalClasses took 3.0375ms
[debug]   Load.loadUnit(file:/C:/Users/Joshua%20Goon/OneDrive/Documents/GitHub/finalprojectv2-joshuagoon/, ...) took 1144.1535ms
[debug] Load.apply: load took 1146.2409ms
[debug] Load.apply: resolveProjects took 0.1443ms
[debug] Load.apply: finalTransforms took 22.6789ms
[debug] Load.apply: config.delegates took 0.4142ms
[debug] Load.apply: Def.make(settings)... took 87.5527ms
[debug] Load.apply: structureIndex took 23.8055ms
[debug] Load.apply: mkStreams took 0.0028ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to scalaFXIntro (in build file:/C:/Users/Joshua%20Goon/OneDrive/Documents/GitHub/finalprojectv2-joshuagoon/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download, resolveSourceClassifiers, insertProjectTransitiveDependencies", None, None)
[info] Defining Global / sbtStructureOptions
[info] The new value will be used by Global / ssOptions
[debug] Defining 
[debug] 	Global / sbtStructureOptions
[debug] 
[debug] The new value will be used by 
[debug] 	Global / ssOptions
[info] Reapplying settings...
[info] set current project to scalaFXIntro (in build file:/C:/Users/Joshua%20Goon/OneDrive/Documents/GitHub/finalprojectv2-joshuagoon/)
[debug] > Exec(preferScala2, None, None)
[debug] > Exec(*/*:dumpStructureTo C:/Users/JOSHUA~1/AppData/Local/Temp/sbt-structure.xml, None, None)
[debug] Evaluating tasks: Global / dumpStructureTo
[warn] sbt 0.13 shell syntax is deprecated; use slash syntax instead: Global / dumpStructureTo
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] Writing structure to C:\Users\JOSHUA~1\AppData\Local\Temp\sbt-structure.xml...
[info] Done.
[success] Total time: 1 s, completed Aug 15, 2024 2:00:02 PM
[debug] > Exec(session clear-all, None, None)
[info] Reapplying settings...
[info] set current project to scalaFXIntro (in build file:/C:/Users/Joshua%20Goon/OneDrive/Documents/GitHub/finalprojectv2-joshuagoon/)
[debug] > Exec(set ideaPort in Global := 52938, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to scalaFXIntro (in build file:/C:/Users/Joshua%20Goon/OneDrive/Documents/GitHub/finalprojectv2-joshuagoon/)
[debug] > Exec(idea-shell, None, None)
