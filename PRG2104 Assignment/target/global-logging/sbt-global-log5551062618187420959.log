[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\JOSHUA~1\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\JOSHUA~1\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 1.8.0_401)
[debug] Load.defaultLoad until apply took 169.3854ms
[debug]           Load.loadUnit: plugins took 427.0142ms
[debug]           Load.loadUnit: defsScala took 0.5293ms
[debug] [Loading] Scanning directory C:\Users\Joshua Goon\OneDrive\Documents\GitHub\finalprojectv2-joshuagoon\project
[debug]             Load.loadUnit: mkEval took 13.1033ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Joshua Goon\OneDrive\Documents\GitHub\finalprojectv2-joshuagoon\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 28.0538 ms
[info] loading settings for project finalprojectv2-joshuagoon-build from idea.sbt ...
[debug]               Load.resolveProject(finalprojectv2-joshuagoon-build) took 79.4101ms
[debug]             Load.loadTransitive: finalizeProject(Project(id finalprojectv2-joshuagoon-build, base: C:\Users\Joshua Goon\OneDrive\Documents\GitHub\finalprojectv2-joshuagoon\project, plugins: List(<none>))) took 150.5172ms
[debug] [Loading] Done in C:\Users\Joshua Goon\OneDrive\Documents\GitHub\finalprojectv2-joshuagoon\project, returning: (finalprojectv2-joshuagoon-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 562.6357ms
[debug]           Load.loadUnit: cleanEvalClasses took 11.7906ms
[debug]         Load.loadUnit(file:/C:/Users/Joshua%20Goon/OneDrive/Documents/GitHub/finalprojectv2-joshuagoon/project/, ...) took 1012.1775ms
[debug]       Load.apply: load took 1169.6885ms
[debug]       Load.apply: resolveProjects took 7.4127ms
[debug]       Load.apply: finalTransforms took 81.3751ms
[debug]       Load.apply: config.delegates took 10.6547ms
[debug]       Load.apply: Def.make(settings)... took 687.9502ms
[debug]       Load.apply: structureIndex took 140.7991ms
[debug]       Load.apply: mkStreams took 2.1723ms
[info] loading project definition from C:\Users\Joshua Goon\OneDrive\Documents\GitHub\finalprojectv2-joshuagoon\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3486.1908ms
[debug]     Load.loadUnit: defsScala took 0.0058ms
[debug] [Loading] Scanning directory C:\Users\Joshua Goon\OneDrive\Documents\GitHub\finalprojectv2-joshuagoon
[debug]       Load.loadUnit: mkEval took 0.6869ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 6.0697 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 49.4097ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Joshua Goon\OneDrive\Documents\GitHub\finalprojectv2-joshuagoon, plugins: List(<none>))) took 58.1237ms
[debug] [Loading] Done in C:\Users\Joshua Goon\OneDrive\Documents\GitHub\finalprojectv2-joshuagoon, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 164.0931ms
[debug]     Load.loadUnit: cleanEvalClasses took 13.3255ms
[debug]   Load.loadUnit(file:/C:/Users/Joshua%20Goon/OneDrive/Documents/GitHub/finalprojectv2-joshuagoon/, ...) took 3665.5156ms
[debug] Load.apply: load took 3690.4064ms
[debug] Load.apply: resolveProjects took 0.1928ms
[debug] Load.apply: finalTransforms took 40.2332ms
[debug] Load.apply: config.delegates took 0.6006ms
[debug] Load.apply: Def.make(settings)... took 129.4739ms
[debug] Load.apply: structureIndex took 45.4263ms
[debug] Load.apply: mkStreams took 0.0034ms
[info] set current project to scalaFXIntro (in build file:/C:/Users/Joshua%20Goon/OneDrive/Documents/GitHub/finalprojectv2-joshuagoon/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 53362 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 53362, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to scalaFXIntro (in build file:/C:/Users/Joshua%20Goon/OneDrive/Documents/GitHub/finalprojectv2-joshuagoon/)
[debug] > Exec(idea-shell, None, None)
